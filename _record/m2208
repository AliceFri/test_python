8.9：    1. 云端web服务拆分内网，外网服务。
        2. 微信通知 加上 # 测试环境， 不需要安全员的任务不通知
        3. 整理述职报告

8.10:   1. 整理权限文档
        2. 加 深圳/福田 region
        3. datahub 加一个测试环境

8.11：  1. worklog 多个owner
        2. merge test dev
        3. 学习shell
        4. 版本号加上分支名

8.12：   1. 对precheck对接，确定方案
        2. 确定车端部署情况


8.15：   1. 开会确定landing tools 和 precheck 对接方案。
        2. 微信机器人通知小组

8.16：   1. 完成precheck 真值表开发
        2. 支持 no_ref_find
        3. 微信机器人通知上线运行

8.17：  1. new model 数据检查功能
        2. new model 支持list[ref_model]
        3. precheck标准值初始化脚本

8.18：  1. precheck对接，批量修改接口

8.19:   1. 优化统一项目的通知样式。


8.22：   1. 查询标准值same接口
        2. 工单按start_datetime降序显示
        3. 研究gitlab.ci
            docker 中安装
            1. 写    docker-compose.yml

version: "3"
services:
  gitlab-runner:
    image: gitlab/gitlab-runner:v13.8.0
    volumes:
      - ./gitlab-runner-config:/etc/gitlab-runner
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      CA_CERTIFICATES_PATH: "/etc/gitlab-runner"
    restart: always


            注册
            docker run --rm -it -e "CA_CERTIFICATES_PATH=/etc/gitlab-runner/ca.crt" -v /root/docker-compose/gitlab-runner/gitlab-runner-config:/etc/gitlab-runner gitlab/gitlab-runner:v13.8.0 register
            docker run --rm -it -e "CA_CERTIFICATES_PATH=/etc/gitlab-runner/ca.crt" -v /home/vms/docker-compose/gitlab-runner/gitlab-runner-config:/etc/gitlab-runner gitlab/gitlab-runner:v13.8.0 register
            注册完
            config.toml文件就改变了， docker restart
            查看是否有问题
            docker exec <container name> /bin/sh -c "gitlab-runner verify"

8.23:   0. 查扫码登录不上的原因 (80端口，重定向到https, 微信扫码登录用到了80端口)
        1. 工单微信通知， 增加解决方案
        2. 上到测试环境
        3. 脚本修正新版vehicle model 和 vehicle type

8.24：  1. 上线正式环境
        2. 权限优化
        3. 微信通知优化

8.25：   1. 导入ve owner
        2. 修改导出driver

8.26：   1. 文档
        2. 修改导出 driver
        3. 恢复车辆操作员权限

====================================================

8.29:   1. no vin vehicles

8.30：   1. 车端hostname 和vms 车辆对应
        2. 车辆创建检查hostname是否正确
        3. 增加组内提醒接口

8.31：   1. worklog 分页， 统计
        2. worklog 筛选条件

9.1:    1. notice_vms_team 接口
        2. api query log(todo)

9.2:    1. gzip
        2. 车辆导出， 车辆加工单数量
        3. 配置docker 网络

====================================================

9.5:    1. 车辆导出， 任务导出
        2. 工单统计 default group
        3. 安全员模块权限
        4. 企业微信消息提醒


9.6：    1. nginx图片限制
        2. 定时查询车名有问题的(todo) 跟 api query log 一起处理
        3. task, plan加一个 follower。

9.7:    1. 修改之前的Bug
        2. 工单添加一个Pending截止日期

9.8：    1. api query log
        2. user自定义token过期时间， user aggregate 加上permission group
        3. 定时查询车名有问题的，通知vms组员

====================================================

9.13    1. 学习 web socket
        2. Python实现 BIO NIO SELECT POLL
        3. 学习Go (todo)

9.14    0. 车辆对应情况调整 done
        1. 从precheck 得到硬件数据 (precheck 传过来是否硬件这个参数)
        2. 工单时间查询优化, 更新结束时间
        3. 任务加 创建者
        4. agent 增加test环境

9.15    0. 整理项目中用到的企业微信api, 梳理替换逻辑

9.16    1. mongodb dev环境加上了密码

====================================================

9.19    1. 接入xAccount   （进度 20%）
        2. vms 加入appid, appsecret, ACCESS_TOKEN  (done)
            接入 外部应用, 的
        3. precheck 选择 module, item对应的车辆      (done todo 提醒前端)

9.20    1. vms appid, appsecret, 接入外部应用加入鉴权
        2. precheck 选择 module, item对应的车辆。 export

9.21    1. 诉职报告
        2. precheck 标准值初始化 改变

9.22    1. 人员区分离职， 看怎么拿到地区信息
        2. 看xAccount怎么接入 跑通流程
        3. 确定 地区权限， 时间权限怎么做

=====================================================

9.26    1. todo precheck 加上每日统计提醒。 默认只显示半个月的data
        2. 关闭了 每日复制正式环境数据到test， 记得开启
        3. 权限（地区和日期）    done

9.27    1. 标准值数据导出与导入
        2. 跟踪precheck，收集用户反馈，制定需求

9.28    1. us_vms部署         done
        2. xaccount 代码
        3. vms车辆没有标准值的时候， precheck调了to_json的话，就给车辆赋上标准值初值   done

9.29    1. xaccount test环境接入代码  done
        2. xaccount 接入测试 Done

=====================================================
10.10   1. 发版

10.11   1. vms_us 前后端流水线 Done
        2. 离职用户标记 用户管理界面不显示  Done
        3. 安排测试接入 xAccount  Done
        4. 学习 JS    TODO

10.12   1. 先把数据库迁到云数据库
        2. 学习   K8s          TODO
        3. 对接 trgs 的文档      Done

10.13   1. 对接 trgs 的文档      Done
        2. vms  GROUP

=====================================================

10.17   0. 提醒 aliyun 机器充值       Done
        1. precheck  中英文 对照     Done
            1.1 单条的添加           Done
        2. 查 下正式环境角色名单      TODO
        3. route server             Done
        4. VMS GROUP                Done
        // 5. 迁移数据库                TODO
        6. 迁移服务到    K8s         TODO

10.18   1. 添加任务开始前半个小时提醒    Done
        2. precheck 中英文对照       Done

10.19   1. vms group

10.20   1. vms group
        2.  create_model 支持 可选   Done
            new_model 支持批量删除    Done
            group   CRUD            Done
            group vehicle CRUD

10.21   1. 切换 code.autox.ds:6543 to hub.autox.tech

======================================================
10.24   1. vms group 70%    Done
        2. 切换 code.autox.ds:6543 镜像库 hub.autox.tech     Done
        3. vms us帮忙跟进一下测试

10.25   1. precheck 支持导入      Done

10.26   1. 车端 agent 卸载

10.28   1. 车端 agent 分工卸载
        2. precheck 优化批量修改标准值   Done

======================================================
10.31   0. vms-us 定时器， 工单延时     Done
        1. ts后类方面的内容
        2. k8s概念学习

11.1    0. vehicle 增加precheck统计 (比如输入一个item，显示所有车这个item最新的值)
            车辆统计弹窗添加precheck 结果固件统计     Done
        1. dev环境 数据库 切换 阿里云

11.3    0. 将 trgs-routing-service 部署到 exa   Done
        1. 学习 K8s   Half

11.4    0. 发版
        1. precheck 完整统计
        2. 转正述职报告

=======================================================

11.7    1. precheck 统计 Done

11.8    1. 学习 K8s

11.10   1. prechekc 生成车辆标准值脚本
        2. vms_us vehicle aggregation fix
        3. fix vehicle put

=======================================================
11.14   1. 封装 route gene service 加上 高德ETA 和 Destination
11.15   1. vms precheck 统计 bug fix
11.16   1. vms precheck 统计 bug fix
11.17   1. vms us 放开权限
        2. vms us slack用户导入；

=======================================================
11.21
