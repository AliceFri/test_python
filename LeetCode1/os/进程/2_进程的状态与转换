### 1. 进程的状态

<br>

#### 1. 三种基本状态

    运行态 Running： 占有CPU, 并在CPU上运行
    
    就绪态 Ready：  已具备运行条件，但由于没有空闲CPU， 而暂时不能运行

    阻塞态 Waiting/Blocked: 等待某一事件而暂时不能运行

#### 2. 另外两种状态
    
    创建态 New
    
    终止态 Terminated

---------

### 2. 进程状态的转换

<br>

创建态 --->  就绪态 <---> 运行态 ---> 结束态
                        
运行态 --> 阻塞态： 进程用“系统调用”的方式，主动进入阻塞态

阻塞态 --> 就绪态： 申请的资源等被满足


就绪态不能直接转换为阻塞态。
阻塞态不能直接转换为运行态。

--------

### 3. 进程控制

<br>

    实现进程状态的转换

原语实现进程控制，原语的特点是执行期间不允许中断， 原语采用 关中断指令 和 开中断指令 实现

关中断指令 和 开中断指令 只允许在核心态下执行的<font color="yellow">特权指令</font>

创建原语， 终止原语， 阻塞原语， 唤醒原语， 切换原语。

---------
<br>

### 4. 进程的通信

<br>

各进程拥有的内存地址空间相互独立，一个进程不能直接访问另一个进程的地址空间。

<br>

##### 4.1 共享存储

    共享空间， 两个进程对共享空间的访问必须是互斥的。

        基于数据结构的共享： 低级通信
        基于存储区的共享：   数据的形式，存放位置由进程控制，高级通信方式

<br>

##### 4.2 管道通信

    管道通信， 管道只能采用半双工通信(某一时间段内只能实现单向的传输)，双向同时通信，需要设置两个管道

    各进程要互斥的访问管道。

<br>

##### 4.3 消息传递

    进程间的数据交换以--格式化的消息--为单位 进程通过操作系统提供的 发送消息/接受消息 两个原语进行数据交换

    直接通信方式： 消息直接挂到接受进程的消息缓冲队列上

    间接通信方式： 消息先发送到信箱， 接受进程从信箱中读取消息

